AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  btc-guesser-backend
  SAM application for the BTC Price Guesser challenge.

Globals:
  Function:
    Timeout: 10 # Default timeout for functions
    MemorySize: 128
    Runtime: nodejs20.x # Or nodejs18.x, match what you selected and your tsconfig target

Resources:
  # DynamoDB Table for Player Data
  PlayerTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: BtcGuesserPlayerTable
      PrimaryKey:
        Name: PlayerId
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1 # Keep low for free tier/testing
        WriteCapacityUnits: 1

  # Lambda Function to Get BTC Price
  GetPriceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BtcGuesserGetPriceFunction
      CodeUri: src/getPrice/ 
      Handler: app.lambdaHandler 
      Events:
        GetPriceApi:
          Type: Api 
          Properties:
            Path: /price
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2020" 
        Sourcemap: true
        EntryPoints: 
          - app.ts

Outputs:
  GetPriceApiEndpoint:
    Description: "API Gateway endpoint URL for GetPrice function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/price" # Adjust /Prod if you use stages
  PlayerTableName:
    Description: "Name of the Player DynamoDB Table"
    Value: !Ref PlayerTable